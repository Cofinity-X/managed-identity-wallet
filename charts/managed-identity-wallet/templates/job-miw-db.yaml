# /********************************************************************************
# * Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License, Version 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0.
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# * License for the specific language governing permissions and limitations
# * under the License.
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

{{- if .Values.miw.jobs.createDatabaseIfNotExists }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-create-db-miw
spec:
  template:
    spec:
      containers:
        - name: create-db
          image: postgres:13
          env:
            - name: USER
              value: {{ tpl ( .Values.miw.database.user | quote ) . }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ tpl ( quote .Values.miw.database.secret ) . }}
                  key: {{ quote .Values.miw.database.secretPasswordKey }}
            - name: HOST
              value: {{ tpl ( .Values.miw.database.host | quote ) . }}
            - name: PORT
              value: {{ tpl ( .Values.miw.database.port | quote ) . }}
            - name: DATABASE
              value: {{ tpl ( .Values.miw.database.name | quote ) . }}
          command: [ "bash", "-c", "--" ]
          args:
            - |
              echo "Postgres user: $USER"
              echo "Postgres host: $HOST"
              echo "Postgres port: $PORT"
              echo "Postgres database: $DATABASE"

              echo "Waiting for postgres to start"
              while ! psql -h $HOST -p $PORT -U $USER -d postgres -c "select 1" > /dev/null 2>&1; do
                  sleep 1
              done

              echo "Creating database $DATABASE"
              psql -h $HOST -p $PORT -U $USER -d postgres -c "CREATE DATABASE $DATABASE" > /dev/null 2>&1 || echo "Skip creation as database $DATABASE already exists"

          securityContext: {{ .Values.jobSecurityContext | toYaml | nindent 12 }}
      restartPolicy: Never
  backoffLimit: 0
{{- end }}