# /********************************************************************************
# * Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License, Version 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0.
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# * License for the specific language governing permissions and limitations
# * under the License.
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

anchors:
  setupDependencies: &setupDependencies true
  postgres:
    host: &postgresHost "{{ .Release.Name }}-postgresql"
    port: &postgresPort 5432
    user: &postgresUser user
    password: &postgresPassword password
    database: &postgresDatabase postgres
    backup:
      enabled: &postgresBackupEnabled false
  keycloak:
    realm: &keycloakRealm miw_test
    clientId: &keycloakClientId miw_private_client
    host: &keycloakHost "{{ .Release.Name }}-keycloak"
    url: &keycloakUrl "http://{{ .Release.Name }}-keycloak"
    user: &keycloakUser user
    password: &keycloakPassword password
    postgres:
      database: &keyCloakPostgresDatabase "miw_keycloak"
  miw:
    host: &miwHost "{{ .Release.Name }}-managed-identity-wallet:8080"
    environment: &miwEnvironment dev
    logging:
      level: &miwLoggingLevel INFO
    authorityWallet:
      bpn: &authorityWalletBpn "BPNL000000000000"
      did: &authorityWalletDid  "did:web:{{ .Release.Name }}-managed-identity-wallet%3A8080:BPNL000000000000"
    ssi:
      useHttpsInDidWebResolution: &useHttpsInDidWebResolution false
      # -- Verifiable Credential expiry date. Format 'dd-MM-yyyy'. Default: 31-12-<current year>
      vcExpiryDate: &vcExpiryDate ""
    postgres:
      database: &miwPostgresDatabase "miw_app"
      encryptionKey: &miwPostgresEncryptionKey 76a7834fb37e090c2789a9b1a76748d3
  defaultSecurityContext: &defaultSecurityContext
    runAsUser: 1001
    runAsGroup: 0
    runAsNonRoot: true

# -- The amount of replicas to run
replicaCount: 1

# -- Image of the main container
image:
  # -- Image repository
  # TODO change back to tractusx/managed-identity-wallet
  repository: ghcr.io/catenax-ng/tx-managed-identity-wallet_miw_service
  # -- PullPolicy
  pullPolicy: Always
  # -- Image tag (empty one will use "appVersion" value from chart definition)
  # TODO remove latest again
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

# -- Parameters for the application (will be stored as secrets - so, for passwords, ...)
secrets: { }
#  DB_USER_NAME: xxx # Has to be the same as below in "postgresql" section
#  DB_PASSWORD: xxx # Has to be the same as below in "postgresql" section
#  KEYCLOAK_CLIENT_ID: xxx
#  ENCRYPTION_KEY: xxx  # 64 chars

# -- Parameters for the application (will be provided as plain environment variables)
envs: { }

miw:
  host: *miwHost
  environment: *miwEnvironment
  ssi:
    enforceHttpsInDidWebResolution: *useHttpsInDidWebResolution
    vcExpiryDate: *vcExpiryDate
  authorityWallet:
    bpn: *authorityWalletBpn
    did: *authorityWalletDid
  database:
    useSSL: false
    port: *postgresPort
    host: *postgresHost
    user: *postgresUser
    password: *postgresPassword
    database: *miwPostgresDatabase
    encryptionKey: *miwPostgresEncryptionKey
  keycloak:
    realm: *keycloakRealm
    clientId: *keycloakClientId
    url: *keycloakUrl
  logging:
    level: *miwLoggingLevel

# -- ServiceAccount configuration
serviceAccount:
  create: true
  annotations: { }
  name: ""

# -- Service configuration
service:
  type: ClusterIP
  port: 8080

# -- Ingress configuration
ingress:
  enabled: false
  annotations: { }
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- PodSecurityContext
podSecurityContext: { }

# -- JobSecurityContext
jobSecurityContext:
  *defaultSecurityContext

# -- Preconfigured SecurityContext
securityContext:
  *defaultSecurityContext

# -- Resource boundaries
resources:
  requests:
    cpu: 250m
    memory: 500Mi
  limits:
    cpu: 2
    memory: 1Gi

# -- NodeSelector configuration
nodeSelector:
  "kubernetes.io/os": linux

# -- Tolerations configuration
tolerations: [ ]

# -- Affinity configuration
affinity: { }

# -- PodAnnotation configuration
podAnnotations: { }

keycloak:
  enabled: *setupDependencies
  postgresql:
    enabled: false
  externalDatabase:
    host: *postgresHost
    port: *postgresPort
    user: *postgresUser
    password: *postgresPassword
    database: *keyCloakPostgresDatabase
  auth:
    adminUser: *keycloakUser
    adminPassword: *keycloakPassword
  keycloakConfigCli:
    enabled: true
    existingConfigmap: keycloak-realm-config
    backoffLimit: 5
  extraEnvVars:
    - name: KEYCLOAK_HOSTNAME
      value: *keycloakHost

postgresql:
  enabled: *setupDependencies
  service:
    port: *postgresPort
  auth:
    database: *postgresDatabase
    username: *postgresUser
    password: *postgresPassword
  # -- see https://github.com/bitnami/charts/tree/main/bitnami/postgresql#backup-parameters
  backup:
    enabled: *postgresBackupEnabled
    conjob:
      schedule: "* */6 * * *"
      containerSecurityContext:
        *defaultSecurityContext
      storage:
        existingClaim: ""
        resourcePolicy: "keep"
        size: "8Gi"