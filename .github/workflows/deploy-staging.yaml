name: Build and push the latest build to staging

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

env:
  CX_CUSTODIAN_VERSION: "0.0.2.${{ env.GITHUB_SHA }}"
  NAMESPACE: "bpdm"
  SECRET: "custodian-staging-secret"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Version
        run: echo ${CX_CUSTODIAN_VERSION}

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CX_ACR_SERVER }}
          username: ${{ secrets.CX_ACR_USER }}
          password: ${{ secrets.CX_ACR_PASSWORD }}
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
            java-version: 17

      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build

      - name: Create dist
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: installDist

      - name: Build and push staging images
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ secrets.CX_ACR_SERVER }}/catena-x/custodian:${{ env.CX_CUSTODIAN_VERSION }}
          push: true

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    if: ${{ false }}  # disable for now

    steps:
      - name: Set the target Azure Kubernetes Service (AKS) cluster. 
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      
      - name: Create namespace if doesn't exist
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

      - name: Create image pull secret for ACR
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.CX_ACR_SERVER }}
          container-registry-username: ${{ secrets.CX_ACR_USER }}
          container-registry-password: ${{ secrets.CX_ACR_PASSWORD }}
          secret-name: ${{ env.SECRET }}
          namespace: ${{ env.NAMESPACE }}
          arguments: --force true
      
      - name: Deploy app to dev
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            ${{ github.workspace }}/deployment/aks-custodian-dev.yaml
          images: |
            ${{ secrets.CX_ACR_SERVER }}/catena-x/custodian:${{ env.CX_CUSTODIAN_VERSION }}
          imagepullsecrets: |
            ${{ env.SECRET }}
          namespace: ${{ env.NAMESPACE }}
